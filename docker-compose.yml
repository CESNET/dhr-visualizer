version: '3.8'

services:
  backend:
    build: ./backend
    image: oculus/backend:latest
    restart: always
    container_name: "oculus_backend"
    env_file:
      - .env
    ports:
      - "8081:8081"
    volumes:
      - tmp:/tmp
      - shared_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - mongo
      - redis

  worker:
    image: oculus/backend:latest
    entrypoint: celery
    command: -A celery_app.celery_app worker -l info -E
    container_name: "oculus_worker"
    env_file:
      - .env
    environment:
      CELERY_BROKER_URL: redis://redis
      CELERY_RESULT_BACKEND: redis://redis
    depends_on:
      - redis
    volumes:
      - shared_data:/data
      - tmp:/tmp

  redis:
    image: redis:alpine
    container_name: "oculus_redis"
#    ports:
#      - "6379:6379"

  frontend:
    build: ./frontend
    restart: always
    container_name: "oculus_frontend"
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - shared_data:/usr/local/apache2/htdocs/data
      - ./certbot-www:/usr/local/apache2/htdocs/certbot
      - ./certs:/etc/letsencrypt
    depends_on:
      - backend

  gjtiff:
    build: ./gjtiff
    container_name: "oculus_gjtiff"
    command: ["sleep", "infinity"]
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    volumes:
      - tmp:/tmp
      - shared_data:/data

  certbot:
    image: certbot/certbot
    container_name: oculus_certbot
    volumes:
      - ./certbot-www:/var/www/certbot
      - ./certs:/etc/letsencrypt
    entrypoint: sh -c "sleep infinity"

  mongo:
    image: mongo
    container_name: "oculus_mongodb"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO__USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO__PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO__DB}
#    volumes:
#      - mongodb_data:/data/db

volumes:
  shared_data:
  tmp:
#  mongodb_data:
